package app 

import (
	"runway/views/layout"
)

templ Chart(dates []string, mins, mids, maxs []float64) {
	<canvas id="rangeChart" width="600" height="400"></canvas>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon"></script>
	<script id="thisScript" data-labels={ templ.JSONString(dates) } data-mins={ templ.JSONString(mins) } data-mids={ templ.JSONString(mids) } data-maxs={ templ.JSONString(maxs) }>

        const s = document.getElementById('thisScript');
		const labels = JSON.parse(s.getAttribute('data-labels'));		
        const minValues = JSON.parse(s.getAttribute('data-mins'));;
        const midValues = JSON.parse(s.getAttribute('data-mids'));;
        const maxValues = JSON.parse(s.getAttribute('data-maxs'));;

    const data = {
      labels,
      datasets: [
        {
          label: 'Min',
          data: minValues,
          fill: '+1', // fill between this and next dataset
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderWidth: 0,
          pointRadius: 0,
          tension: 0.4,
        },
        {
          label: 'Max',
          data: maxValues,
          fill: false, // no fill above
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderWidth: 0,
          pointRadius: 0,
          tension: 0.4,
        },
        {
          label: 'Mid',
          data: midValues,
          borderColor: 'rgba(75, 75, 192, 1)',
          backgroundColor: 'rgba(75, 75, 192, 0.1)',
          borderWidth: 2,
          pointRadius: 3,
          fill: false,
          tension: 0.4,
        }
      ]
    };

    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        interaction: {
          mode: 'index',
          intersect: false
        },
        stacked: false,
        plugins: {
          title: {
            display: true,
            text: 'Min/Max Area with Mid Line'
          }
        },
        scales: {
          x: {
            type: 'time',
            time: {
              unit: 'month',
              displayFormats: {
                  month: 'MMM yy',
            }
            },
            title: {
              display: true,
              text: 'Date'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Value'
            }
          }
        }
      }
    };

    new Chart(document.getElementById('rangeChart'), config);
  </script>
}

templ SimpleForm() {
	<form
		hx-post="/a/simple-prediction"
		hx-swap="none"
	>
		<div class="mb-2">
			<label for="initialBalance">Initial Balance</label>
			<input
				class="uk-input"
				name="initialBalance"
				id="initialBalance"
				type="number"
			/>
		</div>
		<div class="mb-2">
			<label for="monthlyIncome">Monthly Income</label>
			<input
				class="uk-input"
				name="monthlyIncome"
				id="monthlyIncome"
				type="number"
			/>
		</div>
		<div class="mb-2">
			<label for="monthlyExpenses">Monthly Expenses</label>
			<input
				class="uk-input"
				name="monthlyExpenses"
				id="monthlyExpenses"
				type="number"
			/>
		</div>
		<div class="mb-2">
			<label for="expensesConfidence">Expenses Confidence</label>
			<input
				class="uk-input"
				name="expensesConfidence"
				id="expensesConfidence"
				type="number"
			/>
		</div>
		<div>
			<button class="uk-btn uk-btn-primary w-full">
				Calculate
			</button>
		</div>
	</form>
}

templ Prediction(minDist, maxDist string) {
	<div>
		<p>Expected end range is: { minDist } - { maxDist }</p>
	</div>
}

templ SimplePrediction() {
	<header class="flex justify-between items-center p-6">
		<h1 class="text-2xl font-semibold tracking-tight">RUNWAY</h1>
		<nav class="space-x-4">
			<a href="/a/logout" class="text-sm font-medium hover:underline">Logout</a>
		</nav>
	</header>
	<main class="px-6 py-4">
		<div class="max-w-3xl text-center pb-12">
			<h2 class="text-4xl sm:text-5xl font-bold tracking-tight leading-tight">
				You are now super logged in!
			</h2>
		</div>
		@SimpleForm()
	</main>
}

templ SimplePredictionPage(cmp templ.Component) {
	@layout.Base() {
		@cmp
	}
}
